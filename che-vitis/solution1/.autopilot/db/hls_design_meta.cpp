#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("new_point_features", 64, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("new_point_classification_id", 8, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("best_points_address0", 5, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("best_points_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("best_points_we0", 8, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("best_points_d0", 64, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("best_points_q0", 64, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("best_points_address1", 5, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("best_points_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("best_points_q1", 64, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("num_classes", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("known_points_soa_address0", 18, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("known_points_soa_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("known_points_soa_q0", 64, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("known_points_soa_address1", 18, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("known_points_soa_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("known_points_soa_q1", 64, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("num_points", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("num_features", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("ap_return", 8, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "classifyinstance";
